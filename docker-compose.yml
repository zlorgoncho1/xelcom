version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: .Dockerfile
    container_name: frontend
    command: npx ng serve --host ${FRONTEND_HOST} --port ${FRONTEND_SERVER_PORT} # --disable-host-check
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
      - /frontend/.angular
    ports:
      - ${FRONTEND_MAP_PORT}:${FRONTEND_SERVER_PORT}
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: .Dockerfile
    container_name: backend
    command: npx nest start
    volumes:
      - ./backend:/backend
      - /backend/node_modules
    ports:
      - ${BACKEND_MAP_PORT}:${BACKEND_SERVER_PORT}
    depends_on:
      - database
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_PORT: ${DATABASE_SERVER_PORT}
    restart: always

  database:
    image: postgres:16
    container_name: database
    volumes:
      - ./database/data:/var/lib/postgresql/data/pgdata
    ports:
      - ${DATABASE_MAP_PORT}:${DATABASE_SERVER_PORT}
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    restart: always

  dba:
    image: dpage/pgadmin4
    container_name: pgadmin4
    ports:
      - ${PGADMIN_MAP_PORT}:${PGADMIN_SERVER_PORT}
    volumes:
      - ./database/pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - database
